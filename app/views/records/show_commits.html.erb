<ul class="nav nav-tabs">
  <li class="active"><a data-toggle="tab" href="#menu1">Commit History</a></li>
  <li><a data-toggle="tab" href="#menu2">Commit History Chart</a></li>
</ul>

<div class="tab-content">
  <div id="menu1" class="tab-pane fade in active">
    <table class="table table-hover">
      <thead>
        <tr>
          <th scope="col">Number</th>
          <th scope="col">Commit Massage</th>
          <th scope="col">Commiter Name</th>
          <th scope="col">Date</th>
        </tr>
      </thead>
      <tbody>
        <% JSON.parse(@resp).each_with_index do |commit, i| %>
            <tr>
              <th scope="row"><%= i+1 %></th>
              <td><%= commit["commit"]["message"] %></td>
              <td><%= commit["commit"]["committer"]["name"] %> </td>
              <td><%= DateTime.parse commit["commit"]["committer"]["date"] %> </td>
            </tr>
        <% end %>
      </tbody>
    </table>
  </div>
  <div id="menu2" class="tab-pane fade">
    <style>
      .chart { font: 12px Arial;}

      path { 
        stroke: steelblue;
        stroke-width: 2;
        fill: none;
      }
      .axis path,
      .axis line {
        fill: none;
        stroke: grey;
        stroke-width: 1;
        shape-rendering: crispEdges;
      }
      .d3-tip {
        line-height: 1;
        font-weight: bold;
        padding: 12px;
        background: rgba(0, 0, 0, 0.8);
        color: #fff;
        border-radius: 2px;
      }
      /* Creates a small triangle extender for the tooltip */
      .d3-tip:after {
        box-sizing: border-box;
        display: inline;
        font-size: 10px;
        width: 100%;
        line-height: 1;
        color: rgba(0, 0, 0, 0.8);
        content: "\25BC";
        position: absolute;
        text-align: center;
      }
      /* Style northward tooltips differently */
      .d3-tip.n:after {
        margin: -1px 0 0 0;
        top: 100%;
        left: 0;
      }
      .date_filter {
        float: right;
        margin-right: 120px;
      }
    </style>

    <div class="chart">
      <div class="err text-center"></div>
      <br>
      <div class="date_filter">
        <label> Date Filter </label>
        <input type="text" id="datepicker">
      </div>
      <!-- load the d3.js library -->    
      <script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>
      <script src="https://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
      <script>
      $(document).ready(function(){
        $( "#datepicker").datepicker({
          dateFormat: "yy-mm-dd",
          onSelect: function(dateText, inst) {
            $.ajax({
              url: "/records/show_commits",
              type:"get",
              dataType: "json",
              data:{
                date : dateText,
                name : (window.location.href.split('=')[1]).split('&')[0],
                owner : window.location.href.split('=')[2]
              },
              success: function(data){
                if(data.length == 0){
                  $(".err").html("No Commits Found In Selected Date")
                }else{
                   $(".err").html('');
                  createChart(data);
                }        
              },
              error: function(jqXHR, textStatus, errorThrown){
                alert('error');
              }        
            });
          }
        });

        createChart(<%= @resp.html_safe%>);
      });

      function createChart(response){
        var width = 800,   // width of svg
        height = 400,  // height of svg
        padding = 100; // space around the chart, not including labels
        d3.select("svg").remove();
        var response = response
        data = []
        var parseDate = d3.time.format("%d-%b-%y")
        response.forEach(function(d){
          date = new Date(d.commit.committer.date)
          data.push({date:parseDate(date),close: new Date((d.commit.committer.date)).getHours(), commited_by: d.commit.committer.name, message: d.commit.message})
        })
        // var data = [{date:"1-May-12", close: 58.13},{date:"12-May-12", close: 1358.13}]
        // Set the dimensions of the canvas / graph
        var margin = {top: 30, right: 50, bottom: 30, left: 50},
          width = 800 - margin.left - margin.right,
          height = 400 - margin.top - margin.bottom;
        // Parse the date / time
        var parseDate = d3.time.format("%d-%b-%y").parse;
        // Set the ranges
        var x = d3.time.scale().range([0, width]);
        var y = d3.scale.linear().range([height, 0]);
        // Define the axes
        var xAxis = d3.svg.axis().scale(x)
          .orient("bottom").ticks(5);
        var yAxis = d3.svg.axis().scale(y)
          .orient("left").ticks(5);
        // Define the line
        var valueline = d3.svg.line()
          .x(function(d) { return x(d.date); })
          .y(function(d) { return y(d.close); });
            
        var toolTip = d3.tip()
          .attr('class', 'd3-tip')
          .offset([-10, 0])
          .html(function (d) {
            var tooltipHTML = "<span class = 'name'>" + "Commited by :- " + d.commited_by + "</span><br/>" + "Commit Message :- " + d.message + "<br/>" +  "On Date :- " + d.date;
            return tooltipHTML;
          });
        // Adds the svg canvas
        var svg = d3.select(".chart")
          .append("svg")
          .attr("width", width + margin.left + margin.right)
          .attr("height", height + margin.top + margin.bottom)
          .append("g")
          .attr("transform", 
          "translate(" + margin.left + "," + margin.top + ")");

        svg.call(toolTip);
        // Get the data
        data.forEach(function(d) {
          d.date = parseDate(d.date);
          d.close = +d.close;
        });
        // Scale the range of the data
        x.domain(d3.extent(data, function(d) { return d.date; }));
        y.domain([0, d3.max(data, function(d) { return d.close; })]);

        svg.append("text")
          .attr("x", (width / 2))             
          .attr("y", 0 - (margin.top / 2))
          .attr("text-anchor", "middle")  
          .style("font-size", "20px") 
          .style("text-decoration", "underline")  
          .text("Commit History Graph");

        // Add the valueline path.
        svg.append("path")
          .attr("class", "line")
          .attr("d", valueline(data));

        // Add the scatterplot
        svg.selectAll("dot")
          .data(data)
          .enter().append("circle")
          .attr("r", 3.5)
          .attr("cx", function(d) { return x(d.date); })
          .attr("cy", function(d) { return y(d.close); })
          .text(function(d){return d.commited_by;})
          .on('mouseover', toolTip.show)
          .on('mouseout', toolTip.hide);

          // Add the X Axis
          svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis);

          // Add the Y Axis
          svg.append("g")
            .attr("class", "y axis")
            .call(yAxis);

          svg.append("text")
            .attr("text-anchor", "middle")  // this makes it easy to centre the text as the transform is applied to the anchor
            .attr("transform", "translate("+ (padding/2) +","+(height/2)+")rotate(-90)")  // text is drawn off the screen top left, move down and out and rotate
            .text("Time");

          svg.append("text")
            .attr("text-anchor", "middle")  // this makes it easy to centre the text as the transform is applied to the anchor
            .attr("transform", "translate("+ (width/2) +","+(height-(padding/3))+")")  // centre below axis
            .text("Date");
      }

      </script>
    </div>
  </div>
</div>







